{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Complete infrastructure stack for altmx-production - Generated by AltMX",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "VPCId",
            "SubnetIds"
          ]
        },
        {
          "Label": {
            "default": "Application Configuration"
          },
          "Parameters": [
            "ContainerImage",
            "ContainerPort",
            "DesiredCount"
          ]
        }
      ]
    }
  },
  "Parameters": {
    "VPCId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "VPC ID",
      "Default": "VPC"
    },
    "SubnetIds": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "Subnet IDs for the application",
      "Default": "PublicSubnet1,PublicSubnet2"
    },
    "ContainerImage": {
      "Type": "String",
      "Description": "Docker image for the application",
      "Default": "altmx-production:latest"
    },
    "ContainerPort": {
      "Type": "Number",
      "Default": "3000",
      "Description": "Container port"
    },
    "DesiredCount": {
      "Type": "Number",
      "Description": "Desired number of tasks",
      "Default": "2"
    },
    "DatabaseUsername": {
      "Type": "String",
      "Description": "Database master username",
      "Default": "dbadmin",
      "NoEcho": true
    },
    "DatabasePassword": {
      "Type": "String",
      "Description": "Database master password",
      "NoEcho": true,
      "MinLength": 8,
      "MaxLength": 64,
      "AllowedPattern": "[a-zA-Z0-9]*",
      "Default": "TempPassword123"
    },
    "Environment": {
      "Type": "String",
      "Default": "production",
      "Description": "Environment name"
    },
    "ProjectName": {
      "Type": "String",
      "Default": "AltMX",
      "Description": "Project name"
    },
    "Region": {
      "Type": "String",
      "Default": "ap-northeast-1",
      "Description": "AWS Region"
    },
    "DBUsername": {
      "Type": "String",
      "Default": "altmx_admin",
      "Description": "Database username"
    },
    "DBPassword": {
      "Type": "String",
      "Default": "TempPassword123!",
      "NoEcho": true,
      "Description": "Database password (will be updated by Secrets Manager)"
    },
    "HealthCheckPath": {
      "Type": "String",
      "Default": "/health",
      "Description": "Health check path"
    }
  },
  "Resources": {
    "TaskExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "AltMX-altmx-production-execution-role",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
        ],
        "Policies": [
          {
            "PolicyName": "SecretAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "secretsmanager:GetSecretValue"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:altmx-production/*"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "TaskRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "AltMX-altmx-production-task-role",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "ApplicationAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:PutObject",
                    "s3:DeleteObject"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:s3:::altmx-altmx-production-*/*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:GetItem",
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/altmx-production-*"
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "ALBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for ALB",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 80,
            "ToPort": 80,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 443,
            "ToPort": 443,
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-ALB-SG"
          }
        ]
      }
    },
    "ECSSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for ECS tasks",
        "VpcId": {
          "Ref": "VPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": {
              "Ref": "ContainerPort"
            },
            "ToPort": {
              "Ref": "ContainerPort"
            },
            "SourceSecurityGroupId": {
              "Ref": "ALBSecurityGroup"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-ECS-SG"
          }
        ]
      }
    },
    "LogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/ecs/altmx-production",
        "RetentionInDays": 30
      }
    },
    "ECSCluster": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "AltMX-altmx-production-cluster",
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT"
        ],
        "DefaultCapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1,
            "Base": 1
          }
        ],
        "ClusterSettings": [
          {
            "Name": "containerInsights",
            "Value": "enabled"
          }
        ]
      }
    },
    "ECSTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "Family": "AltMX-altmx-production",
        "RequiresCompatibilities": [
          "FARGATE"
        ],
        "NetworkMode": "awsvpc",
        "Cpu": "256",
        "Memory": "512",
        "ExecutionRoleArn": {
          "Ref": "TaskExecutionRole"
        },
        "TaskRoleArn": {
          "Ref": "TaskRole"
        },
        "ContainerDefinitions": [
          {
            "Name": "altmx-production",
            "Image": {
              "Ref": "ContainerImage"
            },
            "Memory": 512,
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp"
              }
            ],
            "Environment": [
              {
                "Name": "NODE_ENV",
                "Value": "production"
              },
              {
                "Name": "PORT",
                "Value": "3000"
              },
              {
                "Name": "APP_NAME",
                "Value": "altmx-production"
              },
              {
                "Name": "RUNTIME",
                "Value": "nodejs18.x"
              },
              {
                "Name": "LOG_LEVEL",
                "Value": "info"
              },
              {
                "Name": "AWS_REGION",
                "Value": {
                  "Ref": "AWS::Region"
                }
              },
              {
                "Name": "CLUSTER_NAME",
                "Value": {
                  "Ref": "ECSCluster"
                }
              }
            ],
            "Secrets": [
              {
                "Name": "API_KEY",
                "ValueFrom": {
                  "Fn::Sub": "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:altmx-production/API_KEY"
                }
              },
              {
                "Name": "DATABASE_PASSWORD",
                "ValueFrom": {
                  "Fn::Sub": "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:altmx-production/DATABASE_PASSWORD"
                }
              },
              {
                "Name": "JWT_SECRET",
                "ValueFrom": {
                  "Fn::Sub": "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:altmx-production/JWT_SECRET"
                }
              },
              {
                "Name": "GITHUB_TOKEN",
                "ValueFrom": {
                  "Fn::Sub": "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:altmx-production/GITHUB_TOKEN"
                }
              }
            ],
            "LogConfiguration": {
              "LogDriver": "awslogs",
              "Options": {
                "awslogs-group": {
                  "Ref": "LogGroup"
                },
                "awslogs-region": {
                  "Ref": "AWS::Region"
                },
                "awslogs-stream-prefix": "ecs"
              }
            },
            "Essential": true,
            "HealthCheck": {
              "Command": [
                "CMD-SHELL",
                "curl -f http://localhost:3000/health || exit 1"
              ],
              "Interval": 30,
              "Timeout": 5,
              "Retries": 3,
              "StartPeriod": 60
            }
          }
        ]
      }
    },
    "ALB": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "AltMX-altmx-production-alb",
        "Type": "application",
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Ref": "ALBSecurityGroup"
          }
        ],
        "Subnets": [
          {
            "Ref": "PublicSubnet1"
          },
          {
            "Ref": "PublicSubnet2"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-altmx-production-alb"
          },
          {
            "Key": "Environment",
            "Value": "production"
          },
          {
            "Key": "ManagedBy",
            "Value": "AltMX"
          }
        ]
      }
    },
    "TargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "AltMX-altmx-production-tg",
        "Port": 3000,
        "Protocol": "HTTP",
        "VpcId": {
          "Ref": "VPC"
        },
        "TargetType": "ip",
        "HealthCheckEnabled": true,
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckPath": "/health",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 3,
        "Matcher": {
          "HttpCode": "200,301,302"
        },
        "TargetGroupAttributes": [
          {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30"
          },
          {
            "Key": "stickiness.enabled",
            "Value": "true"
          },
          {
            "Key": "stickiness.type",
            "Value": "lb_cookie"
          },
          {
            "Key": "stickiness.lb_cookie.duration_seconds",
            "Value": "86400"
          }
        ]
      }
    },
    "HTTPListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "LoadBalancerArn": {
          "Ref": "ALB"
        },
        "Port": 80,
        "Protocol": "HTTP",
        "DefaultActions": [
          {
            "Type": "redirect",
            "RedirectConfig": {
              "Port": "443",
              "Protocol": "HTTPS",
              "StatusCode": "HTTP_301"
            }
          }
        ]
      }
    },
    "HTTPSListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "LoadBalancerArn": {
          "Ref": "ALB"
        },
        "Port": 443,
        "Protocol": "HTTPS",
        "Certificates": [
          {
            "CertificateArn": ""
          }
        ],
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            }
          }
        ],
        "SslPolicy": "ELBSecurityPolicy-TLS-1-2-2017-01"
      }
    },
    "ECSService": {
      "Type": "AWS::ECS::Service",
      "DependsOn": [
        "HTTPListener",
        "HTTPSListener"
      ],
      "Properties": {
        "ServiceName": "AltMX-altmx-production-service",
        "Cluster": {
          "Ref": "ECSCluster"
        },
        "TaskDefinition": {
          "Ref": "ECSTaskDefinition"
        },
        "DesiredCount": {
          "Ref": "DesiredCount"
        },
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "AssignPublicIp": "ENABLED",
            "SecurityGroups": [
              {
                "Ref": "ECSSecurityGroup"
              }
            ],
            "Subnets": [
              {
                "Ref": "PublicSubnet1"
              },
              {
                "Ref": "PublicSubnet2"
              }
            ]
          }
        },
        "LoadBalancers": [
          {
            "ContainerName": "altmx-production",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Ref": "TargetGroup"
            }
          }
        ],
        "HealthCheckGracePeriodSeconds": 60
      }
    },
    "ScalingTarget": {
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
      "Properties": {
        "ServiceNamespace": "ecs",
        "ScalableDimension": "ecs:service:DesiredCount",
        "ResourceId": {
          "Fn::Sub": "service/${ECSCluster}/${ECSService.Name}"
        },
        "MinCapacity": 1,
        "MaxCapacity": 10,
        "RoleARN": {
          "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
        }
      }
    },
    "CPUScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "AltMX-cpu-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "ScalingTarget"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "TargetValue": 70.0,
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
          },
          "ScaleInCooldown": 300,
          "ScaleOutCooldown": 60
        }
      }
    },
    "MemoryScalingPolicy": {
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
      "Properties": {
        "PolicyName": "AltMX-memory-scaling-policy",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "ScalingTarget"
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "TargetValue": 80.0,
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ECSServiceAverageMemoryUtilization"
          },
          "ScaleInCooldown": 300,
          "ScaleOutCooldown": 60
        }
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-production-vpc"
          },
          {
            "Key": "Environment",
            "Value": "production"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-production-igw"
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "ProductionVPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "ProductionVPC"
        },
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone": "ap-northeast-1a",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-public-subnet-1"
          }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "ProductionVPC"
        },
        "CidrBlock": "10.0.2.0/24",
        "AvailabilityZone": "ap-northeast-1c",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-public-subnet-2"
          }
        ]
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "ProductionVPC"
        },
        "CidrBlock": "10.0.11.0/24",
        "AvailabilityZone": "ap-northeast-1a",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-private-subnet-1"
          }
        ]
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "ProductionVPC"
        },
        "CidrBlock": "10.0.12.0/24",
        "AvailabilityZone": "ap-northeast-1c",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-private-subnet-2"
          }
        ]
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-public-rt"
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "ProductionVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-production-vpc"
          }
        ]
      }
    },
    "DatabaseSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "ProductionVPC"
        },
        "CidrBlock": "10.0.21.0/24",
        "AvailabilityZone": "ap-northeast-1a",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-db-subnet-1"
          }
        ]
      }
    },
    "DatabaseSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "ProductionVPC"
        },
        "CidrBlock": "10.0.22.0/24",
        "AvailabilityZone": "ap-northeast-1c",
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-db-subnet-2"
          }
        ]
      }
    },
    "DatabaseSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for RDS database",
        "SubnetIds": [
          {
            "Ref": "DatabaseSubnet1"
          },
          {
            "Ref": "DatabaseSubnet2"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-db-subnet-group"
          }
        ]
      }
    },
    "DatabaseSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for RDS database",
        "VpcId": {
          "Ref": "ProductionVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 5432,
            "ToPort": 5432,
            "SourceSecurityGroupId": {
              "Ref": "ECSSecurityGroup"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-db-sg"
          }
        ]
      }
    },
    "ProductionDatabase": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBInstanceIdentifier": "AltMX-production-db",
        "DBName": "altmx_production",
        "Engine": "postgres",
        "EngineVersion": "15.4",
        "DBInstanceClass": "db.t3.micro",
        "AllocatedStorage": 20,
        "MaxAllocatedStorage": 100,
        "MultiAZ": true,
        "BackupRetentionPeriod": 7,
        "PreferredBackupWindow": "03:00-04:00",
        "PreferredMaintenanceWindow": "Sun:04:00-Sun:05:00",
        "StorageEncrypted": true,
        "DeletionProtection": true,
        "VPCSecurityGroups": [
          {
            "Ref": "DatabaseSecurityGroup"
          }
        ],
        "DBSubnetGroupName": {
          "Ref": "DatabaseSubnetGroup"
        },
        "MasterUsername": {
          "Ref": "DBUsername"
        },
        "MasterUserPassword": {
          "Ref": "DBPassword"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-production-db"
          }
        ]
      }
    },
    "CacheSubnetGroup": {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Properties": {
        "Description": "Subnet group for ElastiCache",
        "SubnetIds": [
          {
            "Ref": "PrivateSubnet1"
          },
          {
            "Ref": "PrivateSubnet2"
          }
        ]
      }
    },
    "CacheSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Security group for ElastiCache",
        "VpcId": {
          "Ref": "ProductionVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 6379,
            "ToPort": 6379,
            "SourceSecurityGroupId": {
              "Ref": "ECSSecurityGroup"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-cache-sg"
          }
        ]
      }
    },
    "ProductionRedis": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "CacheNodeType": "cache.t3.micro",
        "Engine": "redis",
        "EngineVersion": "7.0",
        "NumCacheNodes": 1,
        "CacheParameterGroupName": "default.redis7",
        "CacheSubnetGroupName": {
          "Ref": "CacheSubnetGroup"
        },
        "VpcSecurityGroupIds": [
          {
            "Ref": "CacheSecurityGroup"
          }
        ],
        "AtRestEncryptionEnabled": true,
        "TransitEncryptionEnabled": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "AltMX-production-redis"
          }
        ]
      }
    },
    "CloudFrontDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "ALB",
                  "DNSName"
                ]
              },
              "Id": "ALB-Origin",
              "CustomOriginConfig": {
                "HTTPPort": 80,
                "HTTPSPort": 443,
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "TLSv1.2"
                ]
              }
            }
          ],
          "DefaultCacheBehavior": {
            "target_origin_id": "ALB-Origin",
            "viewer_protocol_policy": "redirect-to-https",
            "allowed_methods": [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "POST",
              "PATCH",
              "DELETE"
            ],
            "cached_methods": [
              "GET",
              "HEAD",
              "OPTIONS"
            ],
            "compress": true,
            "ttl": {
              "default": 86400,
              "max": 31536000,
              "min": 0
            }
          },
          "PriceClass": "PriceClass_All",
          "Enabled": true,
          "Comment": "AltMX Production CDN"
        }
      }
    },
    "LogGroup1": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/ecs/AltMX-production-cluster",
        "RetentionInDays": 30
      }
    },
    "LogGroup2": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/applicationlb/AltMX-production-alb",
        "RetentionInDays": 30
      }
    },
    "CloudWatchAlarm1": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "AltMX-ECS-CPU-High",
        "AlarmDescription": "ECS CPU utilization is high",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/ECS",
        "Threshold": 80.0,
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 2,
        "Period": 300,
        "Statistic": "Average"
      }
    },
    "CloudWatchAlarm2": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmName": "AltMX-ALB-ResponseTime-High",
        "AlarmDescription": "ALB response time is high",
        "MetricName": "TargetResponseTime",
        "Namespace": "AWS/ApplicationELB",
        "Threshold": 2.0,
        "ComparisonOperator": "GreaterThanThreshold",
        "EvaluationPeriods": 3,
        "Period": 300,
        "Statistic": "Average"
      }
    },
    "DatabaseSecret": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Name": "AltMX/prod/database-credentials",
        "Description": "RDS PostgreSQL credentials",
        "GenerateSecretString": {
          "SecretStringTemplate": "{\"username\": \"altmx_admin\"}",
          "GenerateStringKey": "password",
          "PasswordLength": 32,
          "ExcludeCharacters": "\"@/\\"
        }
      }
    }
  },
  "Outputs": {
    "VPCId": {
      "Description": "Production VPC ID",
      "Value": {
        "Ref": "ProductionVPC"
      }
    },
    "ALBEndpoint": {
      "Description": "Application Load Balancer DNS name",
      "Value": {
        "Fn::GetAtt": [
          "ALB",
          "DNSName"
        ]
      }
    },
    "CloudFrontDomain": {
      "Description": "CloudFront distribution domain",
      "Value": {
        "Fn::GetAtt": [
          "CloudFrontDistribution",
          "DomainName"
        ]
      }
    },
    "DatabaseEndpoint": {
      "Description": "RDS database endpoint",
      "Value": {
        "Fn::GetAtt": [
          "ProductionDatabase",
          "Endpoint.Address"
        ]
      }
    },
    "RedisEndpoint": {
      "Description": "ElastiCache Redis endpoint",
      "Value": {
        "Fn::GetAtt": [
          "ProductionRedis",
          "RedisEndpoint.Address"
        ]
      }
    },
    "ECSClusterName": {
      "Description": "ECS cluster name",
      "Value": {
        "Ref": "ECSCluster"
      }
    },
    "ECSServiceName": {
      "Description": "ECS service name",
      "Value": {
        "Ref": "ECSService"
      }
    },
    "ApplicationURL": {
      "Description": "Application URL",
      "Value": {
        "Fn::Sub": "https://${CloudFrontDistribution.DomainName}"
      }
    }
  },
  "Conditions": {
    "HasCertificate": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            "",
            ""
          ]
        }
      ]
    }
  }
}